.progression-popup(ng-hide='getHidden()', ng-click='$event.stopPropagation()')
  .popup
    .content
      h4 {{getTitle()}}
      .start(ng-show='isStart() && !getCompleted()')
        button(ng-click='setCompleted()') Start
      .progressing(ng-show='getProgressing() && !getCompleted() && !isStart()')
        .default(ng-hide='addingNote()')
          .dates
            .date 
              label Proposed Task Duration: 
              strong {{getEstDays()}}{{getData().afterTitle}}
            .date 
              label Estimated End Date: 
              strong {{getDate() | date:'mediumDate'}}{{getDate()?'':'Progression not started'}}
          .no-notes(ng-show='getNotes().length') 
            span {{getNotes().length}} 
            | {{getNotes().length===1?'Note':'Notes'}}
          button(ng-click='addNote()') Add Note
          button.est-date(ng-click='setDate()', ng-show="auth.checkRoles(['superadmin','admin'])") Change completion date
          button.advance-progression(ng-click='setDate()', ng-hide="auth.checkRoles(['superadmin','admin'])") Advance milestone
          button.complete(ng-click='setCompleted()') Mark as Completed
        .note-add(ng-show='addingNote()')
          code-mirror(ng-model='note', options='{mode:"markdown"}')
          button(ng-click='doAddNote()') OK
          button(ng-click='cancelAddNote()') Cancel
      .completed(ng-show='getCompleted()')
        .dates
          .date
            label Completed: 
            strong {{getCompletedTime() | date:'mediumDate'}}, {{getCompletedTime() | date:'shortTime'}}
      .awaiting(ng-show='!getCompleted() && !getProgressing() && !isStart()')
        .dates
          .date 
            label Proposed Task Duration: 
            strong {{getEstDays()}}{{getData().afterTitle}}
          .date 
            label Estimated End Date: 
            strong {{getDate() | date:'mediumDate'}}{{getDate()?'':'Related milestone not reached'}}
        button.est-date(ng-click='setDate()') Change milestone completion date
        button.start(ng-click='setProgressing()', ng-show='getDate()') Start milestone
    .editor
      .title
        label Title
        input(type='text', ng-model='getData().title')
      .est-days
        label Est no days
        input.num(type='number', ng-model='getData().estDays')
        span &nbsp;days after 
        select(ng-model='getData().estAfter')
          option(value='') this milestone
          optgroup(ng-repeat='progression in getProgressions()', label='{{progression.name}}, {{progression.side}}')
            option(ng-repeat='milestone in getMilestones(progression)', value='{{milestone._id}}') {{milestone.title}}
        select(ng-model='getData().estType')
          option(value='') started
          option(value='complete') completed
      .tabs(ng-click='reset()')
        .tab(ng-click='editorState="icon"', ng-class='{selected:editorState==="icon"}')
          h4 Icon
          .milestone
            .icon(class='{{ getData().icon || "house"}}')
        .tab(ng-click='editorState="actions"', ng-class='{selected:editorState==="actions"}')
          h4 Actions
          h5 {{getData().actions.length}}
        .tab(ng-click='editorState="todos"', ng-class='{selected:editorState==="todos"}')
          h4 Todos
          h5 {{getData().todos.length}}
      .icons(ng-show='editorState==="icon"')
        .milestone(ng-repeat='icon in icons', ng-click='getData().icon = icon')
          .icon(class='{{icon}}', ng-class='{selected:getData().icon===icon}')
      .actions(ng-show='editorState==="actions"')
        table(ng-show='getData().actions.length')
          thead
            tr
              th.shrink On
              th.shrink Type
              th Name
              th.shrink
          tbody
            tr(ng-repeat='action in getData().actions', ng-click='editAction(action);$event.stopPropagation()')
              td {{action.on}}
              td {{action.type}}
              td {{action.name}}
              td
                a.delete(href='', ng-click='getData().actions.remove(action)') Delete
            
        form(name='actionForm', ng-show='editingAction', ng-submit='addAction(action)')
          span On
          select(ng-model='action.on')
            option Start
            option Complete
            option Overdue
          span Type
          select(ng-model='action.type')
            option Trigger
            option Email
            option Sms
          .trigger(ng-show='action.type==="Trigger"')
            h5 Trigger
            .trigger-opts
              .trigger-opt
                label Milestone
                select(ng-model='action.milestone')
                  option(value='') this milestone
                  optgroup(ng-repeat='progression in getProgressions()', label='{{progression.name}}, {{progression.side}}')
                    option(ng-repeat='milestone in getMilestones(progression)', value='{{milestone._id}}') {{milestone.title}}
              .trigger-opt
                label Action
                select(ng-model='action.triggerAction')
                  option(value='') Start milestone
                  option(value='complete') Complete milestone
            
          .email(ng-show='action.type==="Email"')
            h5 Email
            label.large Send to
            multi-check(ng-model='action.to')
              multi-check-item(ng-repeat='contact in contactOptions', value='{{contact.id}}') {{contact.name}}
            label.large Template
            select(ng-model='action.template')
              option(ng-repeat='template in emailTemplates.items', value='{{template._id}}') {{template.name}}
          .sms(ng-show='action.type==="Sms"')
            h5 Sms
            label.large Send to
            multi-check(ng-model='action.to')
              multi-check-item(ng-repeat='contact in contactOptions', value='{{contact.id}}') {{contact.name}}
            label.large Template
            select(ng-model='action.template')
              option(ng-repeat='template in smsTemplates.items', value='{{template._id}}') {{template.name}}
          .div
            input(type='submit', value='Save')
            button(type='button', ng-click='cancelAction()') Cancel
        button(ng-click='editingAction=true', ng-hide='editingAction') Add Action
      .todos(ng-show='editorState==="todos"')
        .todo(ng-repeat='todo in getData().todos') {{todo.text}}
          .controls
            a(href='', ng-click='getData().todos.moveUp(todo)')
              i.fa.fa-arrow-circle-o-up(aria-hidden='true')
            a(href='', ng-click='getData().todos.moveDown(todo)')
              i.fa.fa-arrow-circle-o-down(aria-hidden='true')
            a(href='', ng-click='getData().todos.remove(todo)')
              i.fa.fa-times-circle-o(aria-hidden='true')
        form(ng-submit='getData().todos.push({text:todo});todo=""')
          input(type='text', ng-model='todo')
          input(type='submit', value='Add todo')
    a.close(href='', ng-click='hide()') X
  .pointer